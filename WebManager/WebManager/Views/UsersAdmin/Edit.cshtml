@model WebManager.Models.AccountViewModels.UserViewModel
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore
@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<form asp-action="Edit" asp-controller="UsersAdmin">
    <div class="form-group">
        <label asp-for="Name" class="control-label">Name</label>
        <input type="text" asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <input type="hidden" asp-for="Id" />
    </div>
    <div class="form-group">
        <input type="hidden" asp-for="Password" />
    </div>
    <div class="form-group">
        <label asp-for="Email" class="control-label">Email</label>
        <input type="text" asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        @foreach (IdentityRole role in Model.AllRoles)
        {
            <input type="checkbox" name="UserRoles" value="@role.Name"
                   @(Model.UserRoles.Contains(role.Name) ? "checked=\"checked\"" : "") />@role.Name <br/>
        }
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-default" />
    </div>
</form>   
    

<div>
    <a asp-action="Index">Back to List Users</a>
</div>
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}